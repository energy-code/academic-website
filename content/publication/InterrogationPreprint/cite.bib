
@article{adamsteinMakingMostModel,
	title = {Making the {Most} of a {Model}: {Interrogation} {Methods} for {Computer} {Codes}},
	copyright = {All rights reserved},
	doi = {10.31224/osf.io/npqs2},
	abstract = {Computer code models have become the default tool for analysis in many areas of research and industry. The research focus for evaluating these models has been primarily focused on theoretical simulation methods and overlooks the application of these methods. Many existing computer codes and models do not allow for simulation, uncertainty quantification, or other modern computing capabilities. These computer codes are generally comprised of two categories: those with limited operation by design and older legacy codes. Updating these software codes is not an option in many situations due to time constraints, cost, loss of skills needed to upgrade aging programming languages, lack of access to source code, and other constraints. This paper compiles and evaluates methods to systematically interrogate computer codes, including reduced iteration design of experiments (DoE) methods. It was determined that while several of these methods are routinely used in other fields, they have not been applied to computer code models. This paper discusses challenges present when evaluating computer codes and offers a decision framework for selecting interrogation methods. An example case study application of a definitive screening design (DSD) with the Atmospheric Relative Concentrations in Building Wakes (ARCON96) computer code is provided to illustrate use of the decision framework and application of DoE fractional factorial designs to computer codes.},
	journal = {engrXiv},
	author = {{Adam Stein} and {Kenneth Redus} and {Paul Fischbeck}},
	month = nov,
	year = {2020}
}
